node ('java-builder'){
    stage ("Setup maven toolkit"){
        mvnHome = tool 'M3'
        tool name: 'M3', type: 'maven'
    }

    stage("checkout some code"){
        sh('echo Hello world')

        checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[url: 'https://github.com/omrisiri/maven-hello-world.git']]])

    }

    stage("build maven project"){

    sh "cd my-app ; ${mvnHome}/bin/mvn package"
    stash includes: 'my-app/target/my-app*.jar', name: 'myapp'


    }
}
stage("Build docker image"){

    node ('docker'){

      checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[url: 'https://github.com/omrisiri/maven-hello-world.git']]])
      unstash 'myapp'
      docker_artifact = docker.build("my-app:latest", "-f Dockerfile .")


    }


}
stage("do something in parralell"){
    parallel(
            build1:{
                node('java-builder'){
                    sh('echo build1 ; sleep 35')
                }
            },
            build2: {
                node('java-builder'){
                    sh('echo build2 ; sleep 30')
                }
            }
    )
}


